//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

package hybridmeter;

//
// TODO auto-generated type
//

import inet.applications.contract.IApp;
import inet.node.inet.WirelessHost;


module WirelessNodeBasic extends WirelessHost
{
    parameters:
        numApps = 1;
        numWlanInterfaces = 1;
        wlan[0].typename = "Ieee802154NarrowbandInterface";

        // See https://inet.omnetpp.org/docs/users-guide/ch-other-network-protocols.html for an explanation of this configuration
        hasGn = false; // Esto en el fondo, quiero que esté a true
        hasIpv4 = true; // Voy a probar esta configuración
        hasIpv6 = false;
        generic.typename = "WiseRouteNetworkLayer";


        @display("i=misc/sensor2");
        @display("bgb=821.044,695.492");

    gates:
        input upperLayerIn;   // Aquí conectaremos la MAC de PRIME
        output upperLayerOut; // Aquí conectaremos la MAC de PRIME

    submodules:

//        app[numApps]: <> like IApp {
//            parameters:
//                @display("p=485.688,42.952,row,150");
//        }


        PHYLayerAbstraction: RfPhysicalInterface {
            parameters:
                @display("p=280.84,353.52798");
        }


    connections allowunconnected:


        //PHYLayerAbstraction.rfgateout --> app[0].socketIn; // Si pongo una aplicación predeterminada, entonces este cocket ya está usado. Por eso quiero crear mi aplicación...
        // app[0].socketOut --> PHYLayerAbstraction.rfgatein;  // Si pongo una aplicación predeterminada, entonces este cocket ya está usado. Por eso quiero crear mi aplicación...

}
