[General]
network = HybridMeter_Net
repeat = 1

# Network Configuration
# =======================
**.*.*.BERFilename = "./BERDATA/RSC_M_4.txt" # Equivalente a: *.RfBaseNode.PHYLayerAbstraction.BERFilename  para todos los nodos

# Esto sirve para que la capa phy de RF responda los mensajes sin pasarlos para arriba. (esto ocurre en caso de ser true)
# De todas maneras, creo que esto ya no funciona por todos los getParentModule() que se hacen en distintos sitios
**.*.*.standaloneRFNetwork = false			    



# Radio Configuration (for all nodes)
# =======================
**.radio.centerFrequency = 905 MHz
**.radio.bandwidth =  2.8 MHz
**.radio.headerLength =  (1 *8 + 7 + 1) * 16us


**.transmitter.modulation = "BPSK"  # Esta no es la modulación de verdad. Esto NO se utiliza pero es necesatio para que la radio de INET funcione 
**.transmitter.bitrate = 250kbps


**.transmitter.power = 2.29mW

**.receiver.modulation = "BPSK" # Esta no es la modulación de verdad. Esto NO se utiliza pero es necesatio para que la radio de INET funcione
**.receiver.sensitivity = -94.01dBm
**.receiver.minInterferencePower = -120dBm


# Base Node Configuration
# =======================
*.RfBaseNode.mobility.typename = "StationaryMobility"
*.PLC_BN.hasRF = true
*.PLC_BN.hasPRIME = true

*.*.rflan.PHYLayerAbstraction.posicionYdelBN = 300 # Este parámetro se pone tanto al BN como a todos los SN. Los SN saben a qué "y" está el BN


*.PLC_BN.mac.amIHybridMAC = true
*.PLC_BN.mac.oneOfEveryXNodesIsRF = 0 # If 0 all nodes are PLC. If 1 all nodes are RF. If 2 50% are RF. If 3, 33% (1/3) are RF. If 4, 25% (1/4) are RF




# Service Node Configuration
# =======================
*.RfServiceNode.mobility.typename = "StationaryMobility"
*.PLC_SN[*].hasRF = true
*.PLC_SN[*].hasPRIME = true

#*.PLC_SN[*].mac.amIHybridMAC = true  # Esto se toca solo en inicialización dependiendo del parámetro oneOfEveryXNodesIsHybrid 
*.PLC_SN[*].mac.oneOfEveryXNodesIsRF = 0 # If 0 all nodes are PLC. If 1 all nodes are RF. If 2 50% are RF. If 3, 33% (1/3) are RF. If 4, 25% (1/4) are RF

*.PLC_SN[*].mac.oneOfEveryXNodesIsHybrid = 0       # If 0, all nodes are Regular nodes. If 1 all nodes are hybrid nodes.  If value = 2, then 50% of nodes are hybrid. If value = 3, then 33% (1/3) of nodes are hybrid
*.PLC_SN[*].mac.oneOfEveryXHybridNodesIsRF = 0     # If 0, all HYBRID nodes are initialized as RF. If 1, HYBRID nodes are initialized as RF nodes. If value = 2, then 50% of nodes are RF. If value = 3, then 33% (1/3) of nodes are RF
*.PLC_SN[*].mac.oneOfEveryXRegularNodesIsRF = 0    # If 0, all REGULAR (non-hybrid) nodes are initialized as RF. If 1, REGULAR nodes are initialized as PLC. If value = 2, then 50% of nodes are RF. If value = 3, then 33% (1/3) of nodes are RF




#sim-time-limit = 50000s
sim-time-limit = 3000s
**.endSimTime = 50000
#cpu-time-limit = 300s
#debug-on-errors = true
#record-eventlog = false #EAR. 10/09/2013. Not used


## TOPOLOGÍAS
# Boolean to choose between uniform or typical distributions:
# Uniform distribution
#**.uniform_d = false
# Typical distribution
**.uniform_d=true
# Falla si lo ponemos a true!!!
#**.nHostsPerBranch = 92
#**.busLength = 400 # Esto no se utiliza, xq siempre ponemos 200



# EAR. 03/06/2013. Conditions for the storage of the different variables
# Variables stored in PLCMAC.cpp
#**.recordPLCAccessDelayVector=false
#**.recordPLCMessagesWithErrors=false
#**.recordPLCnumberOfmacSCPMaxTxAttemptsVector=false
#**.recordPLCTxAttemptsBeforeTxVector=false
#**.recordPLCTxQueueLength=false
#**.recordPLCTxQueueLengthALV=false
#**.recordPLCmacSCPRBOTime=false

**.fixedArch = false  # para simular arquitecturas fijas o aleatorias (Para UC3M)

# EAR. variable stored in PLCApp.cpp
#**.recordPLCAppMsgLatency=false #EAR. 10/09/2013. Not used
# EAR. variables stored in DLMSCOSEMAppBN/SN.cpp
**.recordDLMSCOSEMAppMsgRoundtripLatency=true
**.recordDLMSCOSEMAppMsgLatency=false
**.recordDLMSCOSEMAppTTRAllMeters=true
# EAR. 17/09/2013
#**.recordRoundtrip_polling=false
**.record_app_roundtrip=true
# EAR: 09/09/2013.
# Variables stored in PLCMAC_BN
# EAR. 04/07/2013. Included to store the info received by the BN in the PRO_REQ_S message
#**.record_PRO_REQ_S_received=false
#**.record_ALV_S_received=false
#**.record_ALV_B_sent=false
#**.record_PRO_REQ_B_sent=false
**.record_PRO_Num_Switches=true
#**.record_Map_roundtrip_details=false
**.record_REG=true

# Variables stored in PLCMAC_SN
#**.record_BCN_sent=false
#**.record_PRO_REQ_S_sent=false
#**.record_ALV_B_received=false
#**.recordEUI48_CurrentNode=false
# EAR. 11/09/2013. Included to store the info received by the SN in a data packet
#**.record_DATA_PKT=true
#**.record_Indiviual_SN_Roundtrip=false
# EAR. 19/09/2013
#**.record_Com_Mode=true


**.printLog = false


**.PLC_BN.mac.DEFAULT_ALV_TIME = 120
#**.BER_SIM= 0.00001
**.BER_SIM= -1.0  # usa los params de las curvas de BER 
**.PLC_SN[*].mac.DEFAULT_COMMUNICATION_MODE = 0
**.PLC_SN[*].mac.RANDOM_REGISTRATION_NUMBER = 10 
**.PLC_SN[*].mac.RANDOM_REGISTRATION = false
**.PLC_SN[*].mac.ALV_OFFSET = 60
**.PLC_SN[*].mac.SWITCH_CAPABILITY = true  # use of SWITCH capability in SN
#**.PLC_SN[*].mac.PRN_WAIT_TIME = 30 # tiempo de espera para enviar un mensaje de PRN en caso de no haber recibido ningun beacon
**.mac.PRN_WAIT_TIME = 30 # tiempo de espera para enviar un mensaje de PRN en caso de no haber recibido ningun beacon
**.interAppMsgTime = 10.0
**.firstAppMsgAt = 300.0

# Optimizacion de SW
#**.PLC_BN.promotionNode_EUI48 = 0   # SW optimo
**.PLC_BN.mac.promotionNode_EUI48 =-1 # SW aleatorio
#**.PLC_BN.mac.promotionNode_EUI48 = 10 # 
**.PLC_BN.mac.promotionNode_2ndLevel_EUI48 = -1  # SW 2nd nivel aleatorio
#**.PLC_BN.mac.promotionNode_2ndLevel_EUI48 = 25



**.ctrlIndComMode = 0
**.initialIndComMode = 0
**.usePRM = true # uso del PHY robustness management
**.interPromotionTime = 200

**.appBlockBehaviour = true #Whether the application messages are sent in blocks or not.
# Usados en el caso en el que no se trabaja con bloques DLSM/COSEM
**.AppReqMsgSize_Bytes = 70 
**.AppResMsgSize_Bytes = 1568

# Usados en el caso de trabajo con bloques DLMS/COSEM
**.AppGetReqSize_Bytes = 71 # Size for the GetReq message from BN to SN
**.AppGetReqNextSize_Bytes = 14 # Size for the GetReqNext message from BN to SN
**.AppResBlockSize_Bytes = 239 # Size for the GetRes message from SN to BN

**.AppProcessingTime = 5.0 # Processing time for the App layer to send the next msg block


**.llc.llcReTxTimer = 10 # Number of seconds for which a LLC entity waits for acknowledgement of a DATA_PRIM  message
**.PLC_SN[*].mac.allowSwitchIfDBPSK_FEC = true
**.PLC_SN[*].mac.refreshSwitchPower = false
**.PLC_SN[*].mac.numDisconnectionsBeforePRN = 5 

**.alvNChances = 3
**.plcBus[*].impulsive = false
**.sequentialPollingInterval =  9
**.useSequentialPolling = true

**.sendALV = true
**.appTimeOut = 50

**.txQueueLimit = 10000

warmup-period = 5s

# Parametros de la capa LLC
**.llc.CIMTUSizeBytes = 256
**.llc.CIMTUSizeBits = 2048
**.llc.defaultWindowSize = 1


#2001 -> sequential mode (LINTER); 2002 -> simultaneous mode
**.appBehavior = 2001
**.nBranches = 3

**.PLC_SN[*].mac.CAP_CFP = false
**.PLC_SN[*].llc.CAP_CFP = false

**.PLC_BN.mac.policy = 1


**.plcBus[*].nullAttenuation = false # true: mira el fichero de atenuaciones  # false: no lo mira y no hay atenuación
**.nHostsPerBranch = 20

**.attFileAddress = "topologiasLINTER/att/atenuaciones_5.txt"
**.CAP_CFP_NUM_SN = -1

**.busLength = 100
**.busLengthForRadios = 100
**.verticalDistanceBetweenBuses = 20



#**.positions = "25 75 75 75 75 75"
**.positions = "25 38 37"
**.archFileAddress = ""

